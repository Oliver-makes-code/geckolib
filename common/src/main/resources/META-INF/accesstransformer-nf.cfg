# Custom RenderTypes
public net.minecraft.client.renderer.RenderType$CompositeState
public net.minecraft.client.renderer.RenderType$CompositeState$CompositeStateBuilder setTextureState(Lnet/minecraft/client/renderer/RenderStateShard$EmptyTextureStateShard;)Lnet/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder;
public net.minecraft.client.renderer.RenderType$CompositeState$CompositeStateBuilder createCompositeState(Z)Lnet/minecraft/client/renderer/RenderType$CompositeState;
public net.minecraft.client.renderer.RenderType$CompositeState$CompositeStateBuilder setLayeringState(Lnet/minecraft/client/renderer/RenderStateShard$LayeringStateShard;)Lnet/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder;
public net.minecraft.client.renderer.RenderStateShard$TextureStateShard
public net.minecraft.client.renderer.RenderStateShard VIEW_OFFSET_Z_LAYERING
public net.minecraft.client.renderer.RenderStateShard NO_LAYERING
public net.minecraft.client.renderer.RenderPipelines register(Lcom/mojang/blaze3d/pipeline/RenderPipeline;)Lcom/mojang/blaze3d/pipeline/RenderPipeline;
public net.minecraft.client.renderer.RenderPipelines MATRICES_COLOR_FOG_SNIPPET
public net.minecraft.client.renderer.RenderType create(Ljava/lang/String;IZZLcom/mojang/blaze3d/pipeline/RenderPipeline;Lnet/minecraft/client/renderer/RenderType$CompositeState;)Lnet/minecraft/client/renderer/RenderType$CompositeRenderType;

# Per-Bone PoseStack Manipulation
public com.mojang.blaze3d.vertex.PoseStack$Pose set(Lcom/mojang/blaze3d/vertex/PoseStack$Pose;)V

# Direct RenderBuffer Access Because Iris Bad Patch
public net.minecraft.client.renderer.LevelRenderer renderBuffers

# ACTOR_COUNT Molang Query
public net.minecraft.client.renderer.LevelRenderer visibleEntityCount

# Entity Rendering
public net.minecraft.client.renderer.entity.EntityRenderDispatcher renderers
public-f net.minecraft.client.renderer.entity.EntityRenderer reusedState
public-f net.minecraft.client.renderer.entity.EntityRenderer createRenderState(Lnet/minecraft/world/entity/Entity;F)Lnet/minecraft/client/renderer/entity/state/EntityRenderState;
public net.minecraft.client.renderer.entity.LivingEntityRenderer solveBodyRot(Lnet/minecraft/world/entity/LivingEntity;FF)F
public net.minecraft.client.renderer.entity.HumanoidMobRenderer getEquipmentIfRenderable(Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/EquipmentSlot;)Lnet/minecraft/world/item/ItemStack;

# GeoArmorRenderer
public-f net.minecraft.client.model.Model renderToBuffer(Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;III)V

# ItemArmorGeoLayer
public net.minecraft.client.model.geom.ModelPart$Cube
public net.minecraft.client.model.geom.ModelPart cubes

# Synced GeoAnimatable ItemStack Stackability
public net.minecraft.core.component.PatchedDataComponentMap copyOnWrite

# Animated Texture
public-f net.minecraft.client.renderer.texture.ReloadableTexture doLoad(Lcom/mojang/blaze3d/platform/NativeImage;ZZ)V